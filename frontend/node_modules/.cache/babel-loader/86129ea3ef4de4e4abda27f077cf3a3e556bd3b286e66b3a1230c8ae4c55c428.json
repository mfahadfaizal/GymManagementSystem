{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dac19\\\\Desktop\\\\GymManagementSystem\\\\frontend\\\\src\\\\components\\\\TestAuth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Card, Button, Alert, Table, Badge, Spinner } from 'react-bootstrap';\nimport { authAPI, userAPI, membershipAPI, equipmentAPI, gymClassAPI, trainingSessionAPI, classRegistrationAPI, paymentAPI } from '../services/api';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestAuth = () => {\n  _s();\n  var _testResults$auth, _testResults$auth2, _testResults$auth$dat, _testResults$auth3, _testResults$users, _testResults$users2, _testResults$users3, _testResults$membersh, _testResults$membersh2, _testResults$membersh3, _testResults$equipmen, _testResults$equipmen2, _testResults$equipmen3, _testResults$gymClass, _testResults$gymClass2, _testResults$gymClass3, _testResults$training, _testResults$training2, _testResults$training3, _testResults$classReg, _testResults$classReg2, _testResults$classReg3, _testResults$payments, _testResults$payments2, _testResults$payments3;\n  const [testResults, setTestResults] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const {\n    user,\n    isAuthenticated\n  } = useAuth();\n  const runTests = async () => {\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    setTestResults({});\n    const results = {};\n    try {\n      // Test 1: Authentication\n      try {\n        const authResponse = await authAPI.login({\n          username: 'admin',\n          password: 'admin123'\n        });\n        results.auth = {\n          success: true,\n          data: authResponse.data\n        };\n      } catch (err) {\n        var _err$response, _err$response$data;\n        results.auth = {\n          success: false,\n          error: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message\n        };\n      }\n\n      // Test 2: Users API\n      try {\n        const usersResponse = await userAPI.getAll();\n        results.users = {\n          success: true,\n          count: usersResponse.data.length\n        };\n      } catch (err) {\n        var _err$response2, _err$response2$data;\n        results.users = {\n          success: false,\n          error: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message\n        };\n      }\n\n      // Test 3: Memberships API\n      try {\n        const membershipsResponse = await membershipAPI.getAll();\n        results.memberships = {\n          success: true,\n          count: membershipsResponse.data.length\n        };\n      } catch (err) {\n        var _err$response3, _err$response3$data;\n        results.memberships = {\n          success: false,\n          error: ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message\n        };\n      }\n\n      // Test 4: Equipment API\n      try {\n        const equipmentResponse = await equipmentAPI.getAll();\n        results.equipment = {\n          success: true,\n          count: equipmentResponse.data.length\n        };\n      } catch (err) {\n        var _err$response4, _err$response4$data;\n        results.equipment = {\n          success: false,\n          error: ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || err.message\n        };\n      }\n\n      // Test 5: Gym Classes API\n      try {\n        const classesResponse = await gymClassAPI.getAll();\n        results.gymClasses = {\n          success: true,\n          count: classesResponse.data.length\n        };\n      } catch (err) {\n        var _err$response5, _err$response5$data;\n        results.gymClasses = {\n          success: false,\n          error: ((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || err.message\n        };\n      }\n\n      // Test 6: Training Sessions API\n      try {\n        const sessionsResponse = await trainingSessionAPI.getAll();\n        results.trainingSessions = {\n          success: true,\n          count: sessionsResponse.data.length\n        };\n      } catch (err) {\n        var _err$response6, _err$response6$data;\n        results.trainingSessions = {\n          success: false,\n          error: ((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.message) || err.message\n        };\n      }\n\n      // Test 7: Class Registrations API\n      try {\n        const registrationsResponse = await classRegistrationAPI.getAll();\n        results.classRegistrations = {\n          success: true,\n          count: registrationsResponse.data.length\n        };\n      } catch (err) {\n        var _err$response7, _err$response7$data;\n        results.classRegistrations = {\n          success: false,\n          error: ((_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : (_err$response7$data = _err$response7.data) === null || _err$response7$data === void 0 ? void 0 : _err$response7$data.message) || err.message\n        };\n      }\n\n      // Test 8: Payments API\n      try {\n        const paymentsResponse = await paymentAPI.getAll();\n        results.payments = {\n          success: true,\n          count: paymentsResponse.data.length\n        };\n      } catch (err) {\n        var _err$response8, _err$response8$data;\n        results.payments = {\n          success: false,\n          error: ((_err$response8 = err.response) === null || _err$response8 === void 0 ? void 0 : (_err$response8$data = _err$response8.data) === null || _err$response8$data === void 0 ? void 0 : _err$response8$data.message) || err.message\n        };\n      }\n      setTestResults(results);\n      setSuccess('API tests completed successfully!');\n    } catch (err) {\n      setError('Failed to run tests: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getStatusBadge = success => {\n    return success ? /*#__PURE__*/_jsxDEV(Badge, {\n      bg: \"success\",\n      children: \"\\u2713 PASS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Badge, {\n      bg: \"danger\",\n      children: \"\\u2717 FAIL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: '100vh',\n      backgroundImage: `url('/assets/images/4.jpg')`,\n      // Path to your gym.jpg in public/assets/images/\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      padding: '1rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: 'white',\n          backgroundColor: '#007bff',\n          display: 'inline-block',\n          padding: '15px 30px',\n          borderRadius: '15px',\n          textShadow: '2px 2px 4px rgba(255, 0, 0, 0.5)'\n        },\n        children: \"API Connectivity Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-0\",\n        style: {\n          color: 'black',\n          textShadow: '2px 2px 4px rgba(255, 0, 0, 0.5)'\n        },\n        children: \"Test all API endpoints to verify system functionality\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            dismissible: true,\n            onClose: () => setError(''),\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"success\",\n            dismissible: true,\n            onClose: () => setSuccess(''),\n            children: success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: isAuthenticated && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-muted\",\n              children: [\"Logged in as: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: user === null || user === void 0 ? void 0 : user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this), \" (\", user === null || user === void 0 ? void 0 : user.role, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), Object.keys(testResults).length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"API Endpoint\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Authentication\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: getStatusBadge((_testResults$auth = testResults.auth) === null || _testResults$auth === void 0 ? void 0 : _testResults$auth.success)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_testResults$auth2 = testResults.auth) !== null && _testResults$auth2 !== void 0 && _testResults$auth2.success ? `Token received: ${(_testResults$auth$dat = testResults.auth.data) !== null && _testResults$auth$dat !== void 0 && _testResults$auth$dat.accessToken ? 'Yes' : 'No'}` : (_testResults$auth3 = testResults.auth) === null || _testResults$auth3 === void 0 ? void 0 : _testResults$auth3.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Users API\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: getStatusBadge((_testResults$users = testResults.users) === null || _testResults$users === void 0 ? void 0 : _testResults$users.success)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_testResults$users2 = testResults.users) !== null && _testResults$users2 !== void 0 && _testResults$users2.success ? `${testResults.users.count} users found` : (_testResults$users3 = testResults.users) === null || _testResults$users3 === void 0 ? void 0 : _testResults$users3.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Memberships API\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: getStatusBadge((_testResults$membersh = testResults.memberships) === null || _testResults$membersh === void 0 ? void 0 : _testResults$membersh.success)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_testResults$membersh2 = testResults.memberships) !== null && _testResults$membersh2 !== void 0 && _testResults$membersh2.success ? `${testResults.memberships.count} memberships found` : (_testResults$membersh3 = testResults.memberships) === null || _testResults$membersh3 === void 0 ? void 0 : _testResults$membersh3.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Equipment API\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: getStatusBadge((_testResults$equipmen = testResults.equipment) === null || _testResults$equipmen === void 0 ? void 0 : _testResults$equipmen.success)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_testResults$equipmen2 = testResults.equipment) !== null && _testResults$equipmen2 !== void 0 && _testResults$equipmen2.success ? `${testResults.equipment.count} equipment items found` : (_testResults$equipmen3 = testResults.equipment) === null || _testResults$equipmen3 === void 0 ? void 0 : _testResults$equipmen3.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Gym Classes API\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: getStatusBadge((_testResults$gymClass = testResults.gymClasses) === null || _testResults$gymClass === void 0 ? void 0 : _testResults$gymClass.success)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_testResults$gymClass2 = testResults.gymClasses) !== null && _testResults$gymClass2 !== void 0 && _testResults$gymClass2.success ? `${testResults.gymClasses.count} classes found` : (_testResults$gymClass3 = testResults.gymClasses) === null || _testResults$gymClass3 === void 0 ? void 0 : _testResults$gymClass3.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Training Sessions API\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: getStatusBadge((_testResults$training = testResults.trainingSessions) === null || _testResults$training === void 0 ? void 0 : _testResults$training.success)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_testResults$training2 = testResults.trainingSessions) !== null && _testResults$training2 !== void 0 && _testResults$training2.success ? `${testResults.trainingSessions.count} sessions found` : (_testResults$training3 = testResults.trainingSessions) === null || _testResults$training3 === void 0 ? void 0 : _testResults$training3.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Class Registrations API\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: getStatusBadge((_testResults$classReg = testResults.classRegistrations) === null || _testResults$classReg === void 0 ? void 0 : _testResults$classReg.success)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_testResults$classReg2 = testResults.classRegistrations) !== null && _testResults$classReg2 !== void 0 && _testResults$classReg2.success ? `${testResults.classRegistrations.count} registrations found` : (_testResults$classReg3 = testResults.classRegistrations) === null || _testResults$classReg3 === void 0 ? void 0 : _testResults$classReg3.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Payments API\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: getStatusBadge((_testResults$payments = testResults.payments) === null || _testResults$payments === void 0 ? void 0 : _testResults$payments.success)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_testResults$payments2 = testResults.payments) !== null && _testResults$payments2 !== void 0 && _testResults$payments2.success ? `${testResults.payments.count} payments found` : (_testResults$payments3 = testResults.payments) === null || _testResults$payments3 === void 0 ? void 0 : _testResults$payments3.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Test Credentials:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-unstyled\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Admin:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 21\n                }, this), \" admin/admin123\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Staff:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 21\n                }, this), \" staff/staff123\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Trainer:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this), \" trainer/trainer123\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Member:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this), \" member/member123\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(TestAuth, \"MWZekJH7mboqCYSfyv46gdilzYk=\", false, function () {\n  return [useAuth];\n});\n_c = TestAuth;\nexport default TestAuth;\nvar _c;\n$RefreshReg$(_c, \"TestAuth\");","map":{"version":3,"names":["React","useState","useEffect","Container","Card","Button","Alert","Table","Badge","Spinner","authAPI","userAPI","membershipAPI","equipmentAPI","gymClassAPI","trainingSessionAPI","classRegistrationAPI","paymentAPI","useAuth","jsxDEV","_jsxDEV","TestAuth","_s","_testResults$auth","_testResults$auth2","_testResults$auth$dat","_testResults$auth3","_testResults$users","_testResults$users2","_testResults$users3","_testResults$membersh","_testResults$membersh2","_testResults$membersh3","_testResults$equipmen","_testResults$equipmen2","_testResults$equipmen3","_testResults$gymClass","_testResults$gymClass2","_testResults$gymClass3","_testResults$training","_testResults$training2","_testResults$training3","_testResults$classReg","_testResults$classReg2","_testResults$classReg3","_testResults$payments","_testResults$payments2","_testResults$payments3","testResults","setTestResults","loading","setLoading","error","setError","success","setSuccess","user","isAuthenticated","runTests","results","authResponse","login","username","password","auth","data","err","_err$response","_err$response$data","response","message","usersResponse","getAll","users","count","length","_err$response2","_err$response2$data","membershipsResponse","memberships","_err$response3","_err$response3$data","equipmentResponse","equipment","_err$response4","_err$response4$data","classesResponse","gymClasses","_err$response5","_err$response5$data","sessionsResponse","trainingSessions","_err$response6","_err$response6$data","registrationsResponse","classRegistrations","_err$response7","_err$response7$data","paymentsResponse","payments","_err$response8","_err$response8$data","getStatusBadge","bg","children","fileName","_jsxFileName","lineNumber","columnNumber","style","minHeight","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","padding","className","color","backgroundColor","display","borderRadius","textShadow","Body","variant","dismissible","onClose","role","Object","keys","striped","bordered","hover","accessToken","_c","$RefreshReg$"],"sources":["C:/Users/dac19/Desktop/GymManagementSystem/frontend/src/components/TestAuth.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Card, Button, Alert, Table, Badge, Spinner } from 'react-bootstrap';\nimport { authAPI, userAPI, membershipAPI, equipmentAPI, gymClassAPI, trainingSessionAPI, classRegistrationAPI, paymentAPI } from '../services/api';\nimport { useAuth } from '../context/AuthContext';\n\nconst TestAuth = () => {\n  const [testResults, setTestResults] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const { user, isAuthenticated } = useAuth();\n\n  const runTests = async () => {\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    setTestResults({});\n\n    const results = {};\n\n    try {\n      // Test 1: Authentication\n      try {\n        const authResponse = await authAPI.login({ username: 'admin', password: 'admin123' });\n        results.auth = { success: true, data: authResponse.data };\n      } catch (err) {\n        results.auth = { success: false, error: err.response?.data?.message || err.message };\n      }\n\n      // Test 2: Users API\n      try {\n        const usersResponse = await userAPI.getAll();\n        results.users = { success: true, count: usersResponse.data.length };\n      } catch (err) {\n        results.users = { success: false, error: err.response?.data?.message || err.message };\n      }\n\n      // Test 3: Memberships API\n      try {\n        const membershipsResponse = await membershipAPI.getAll();\n        results.memberships = { success: true, count: membershipsResponse.data.length };\n      } catch (err) {\n        results.memberships = { success: false, error: err.response?.data?.message || err.message };\n      }\n\n      // Test 4: Equipment API\n      try {\n        const equipmentResponse = await equipmentAPI.getAll();\n        results.equipment = { success: true, count: equipmentResponse.data.length };\n      } catch (err) {\n        results.equipment = { success: false, error: err.response?.data?.message || err.message };\n      }\n\n      // Test 5: Gym Classes API\n      try {\n        const classesResponse = await gymClassAPI.getAll();\n        results.gymClasses = { success: true, count: classesResponse.data.length };\n      } catch (err) {\n        results.gymClasses = { success: false, error: err.response?.data?.message || err.message };\n      }\n\n      // Test 6: Training Sessions API\n      try {\n        const sessionsResponse = await trainingSessionAPI.getAll();\n        results.trainingSessions = { success: true, count: sessionsResponse.data.length };\n      } catch (err) {\n        results.trainingSessions = { success: false, error: err.response?.data?.message || err.message };\n      }\n\n      // Test 7: Class Registrations API\n      try {\n        const registrationsResponse = await classRegistrationAPI.getAll();\n        results.classRegistrations = { success: true, count: registrationsResponse.data.length };\n      } catch (err) {\n        results.classRegistrations = { success: false, error: err.response?.data?.message || err.message };\n      }\n\n      // Test 8: Payments API\n      try {\n        const paymentsResponse = await paymentAPI.getAll();\n        results.payments = { success: true, count: paymentsResponse.data.length };\n      } catch (err) {\n        results.payments = { success: false, error: err.response?.data?.message || err.message };\n      }\n\n      setTestResults(results);\n      setSuccess('API tests completed successfully!');\n    } catch (err) {\n      setError('Failed to run tests: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStatusBadge = (success) => {\n    return success ? (\n      <Badge bg=\"success\">✓ PASS</Badge>\n    ) : (\n      <Badge bg=\"danger\">✗ FAIL</Badge>\n    );\n  };\n\n  return (\n\n    <div\n      style={{\n        minHeight: '100vh',\n        backgroundImage: `url('/assets/images/4.jpg')`,  // Path to your gym.jpg in public/assets/images/\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        padding: '1rem'\n      }}\n    >\n      <Container className=\"mt-4\">\n        <h4\n          style={{\n            color: 'white',\n            backgroundColor: '#007bff',\n            display: 'inline-block',\n            padding: '15px 30px',\n            borderRadius: '15px',\n            textShadow: '2px 2px 4px rgba(255, 0, 0, 0.5)'\n          }}\n        >API Connectivity Test</h4>\n        <p className=\"mb-0\" style={{\n          color: 'black',\n          textShadow: '2px 2px 4px rgba(255, 0, 0, 0.5)'\n        }}>Test all API endpoints to verify system functionality</p>\n        <Card>\n          <Card.Body>\n            {error && (\n              <Alert variant=\"danger\" dismissible onClose={() => setError('')}>\n                {error}\n              </Alert>\n            )}\n            {success && (\n              <Alert variant=\"success\" dismissible onClose={() => setSuccess('')}>\n                {success}\n              </Alert>\n            )}\n\n            <div className=\"mb-3\">\n\n              {isAuthenticated && (\n                <span className=\"text-muted\">\n                  Logged in as: <strong>{user?.username}</strong> ({user?.role})\n                </span>\n              )}\n            </div>\n\n            {Object.keys(testResults).length > 0 && (\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>API Endpoint</th>\n                    <th>Status</th>\n                    <th>Details</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>Authentication</td>\n                    <td>{getStatusBadge(testResults.auth?.success)}</td>\n                    <td>\n                      {testResults.auth?.success ? (\n                        `Token received: ${testResults.auth.data?.accessToken ? 'Yes' : 'No'}`\n                      ) : (\n                        testResults.auth?.error\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Users API</td>\n                    <td>{getStatusBadge(testResults.users?.success)}</td>\n                    <td>\n                      {testResults.users?.success ? (\n                        `${testResults.users.count} users found`\n                      ) : (\n                        testResults.users?.error\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Memberships API</td>\n                    <td>{getStatusBadge(testResults.memberships?.success)}</td>\n                    <td>\n                      {testResults.memberships?.success ? (\n                        `${testResults.memberships.count} memberships found`\n                      ) : (\n                        testResults.memberships?.error\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Equipment API</td>\n                    <td>{getStatusBadge(testResults.equipment?.success)}</td>\n                    <td>\n                      {testResults.equipment?.success ? (\n                        `${testResults.equipment.count} equipment items found`\n                      ) : (\n                        testResults.equipment?.error\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Gym Classes API</td>\n                    <td>{getStatusBadge(testResults.gymClasses?.success)}</td>\n                    <td>\n                      {testResults.gymClasses?.success ? (\n                        `${testResults.gymClasses.count} classes found`\n                      ) : (\n                        testResults.gymClasses?.error\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Training Sessions API</td>\n                    <td>{getStatusBadge(testResults.trainingSessions?.success)}</td>\n                    <td>\n                      {testResults.trainingSessions?.success ? (\n                        `${testResults.trainingSessions.count} sessions found`\n                      ) : (\n                        testResults.trainingSessions?.error\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Class Registrations API</td>\n                    <td>{getStatusBadge(testResults.classRegistrations?.success)}</td>\n                    <td>\n                      {testResults.classRegistrations?.success ? (\n                        `${testResults.classRegistrations.count} registrations found`\n                      ) : (\n                        testResults.classRegistrations?.error\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Payments API</td>\n                    <td>{getStatusBadge(testResults.payments?.success)}</td>\n                    <td>\n                      {testResults.payments?.success ? (\n                        `${testResults.payments.count} payments found`\n                      ) : (\n                        testResults.payments?.error\n                      )}\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            )}\n\n            <div className=\"mt-3\">\n              <h6>Test Credentials:</h6>\n              <ul className=\"list-unstyled\">\n                <li><strong>Admin:</strong> admin/admin123</li>\n                <li><strong>Staff:</strong> staff/staff123</li>\n                <li><strong>Trainer:</strong> trainer/trainer123</li>\n                <li><strong>Member:</strong> member/member123</li>\n              </ul>\n            </div>\n          </Card.Body>\n        </Card>\n      </Container>\n    </div>\n  );\n};\n\nexport default TestAuth; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}